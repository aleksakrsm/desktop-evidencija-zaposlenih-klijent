/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package psproject_v5.ui.form;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import psproject_v5.communication.ObjectWrapper;
import psproject_v5.constants.MyConstants;
import psproject_v5.controller.Controller;
import psproject_v5.help.Helper;
import psproject_v5.domain.Department;
import psproject_v5.domain.Employee;
import psproject_v5.domain.Status;
import psproject_v5.session.Session;
import psproject_v5.ui.components.table.model.TableModelEmployees;
import psproject_v5.ui.form.util.FormMode;

/**
 *
 * @author aleks
 */
public class FrmViewDepartment extends javax.swing.JDialog {

    /**
     * Creates new form FrmViewDepartment
     */
    private Department department;
    private List<Employee> employees;
    private List<Employee> employeesFiltered;

    public FrmViewDepartment(java.awt.Frame parent, boolean modal, Department department) {
        super(parent, modal);
        this.department = department;
        initComponents();
        try {
//            System.out.println(Session.getInstance().getValue(MyConstants.RESULT_OPERATION));
            employees = Controller.getInstance().getAllEmployees(department);            
            cmbStatus.setModel(new DefaultComboBoxModel<>(Status.values()));
            cmbStatus.setSelectedItem(Status.ACTIVE);
            prepareView();
        } catch (Exception ex) {
            
            JOptionPane.showMessageDialog(this, "Sistem ne moze da deaktivira zaposlenog", "GRESKA", JOptionPane.ERROR_MESSAGE);
//            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDepartment1 = new psproject_v5.ui.form.panel.impl.PnlDepartment();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDepartmentEmployees = new javax.swing.JTable();
        cmbStatus = new javax.swing.JComboBox<>();
        btnSetInactive = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Department");

        tblDepartmentEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Firstname", "Lastname", "Birthday", "Academic Title", "Education Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDepartmentEmployees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDepartmentEmployeesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDepartmentEmployees);

        cmbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusActionPerformed(evt);
            }
        });

        btnSetInactive.setText("SET INACTIVE");
        btnSetInactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetInactiveActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Employee");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlDepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnSetInactive, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 55, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSetInactive))
                .addGap(18, 18, 18)
                .addComponent(pnlDepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusActionPerformed
        populateTable();
        if (cmbStatus.getSelectedItem().equals(Status.INACTIVE)) {
            btnSetInactive.setEnabled(false);
        }
        if (cmbStatus.getSelectedItem().equals(Status.ACTIVE)) {
            btnSetInactive.setEnabled(true);
        }

    }//GEN-LAST:event_cmbStatusActionPerformed

    private void btnSetInactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetInactiveActionPerformed
        try {
            if (tblDepartmentEmployees.getSelectedRow() == -1) {
                return;
            }
            Employee employee = employeesFiltered.get(tblDepartmentEmployees.getSelectedRow());
//            System.out.println(":::" + employee);
            int response = JOptionPane.showConfirmDialog(null, "Da li zelite da deaktivirate zaposlenog?", "POTVRDITE", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                employee.setStatus(Status.INACTIVE);
//                System.out.println(":::" + employee);
                Controller.getInstance().update(employee);

            } else {
                return;
            }
            populateTable();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Sistem ne moze da deaktivira zaposlenog", "Error", JOptionPane.ERROR_MESSAGE);
//            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSetInactiveActionPerformed

    private void tblDepartmentEmployeesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDepartmentEmployeesMouseClicked

        Employee employee = employeesFiltered.get(tblDepartmentEmployees.getSelectedRow());
        TableModelEmployees tableModel = (TableModelEmployees) tblDepartmentEmployees.getModel();
        Session.getInstance().addItem("employee", employee);
        Session.getInstance().addItem("tableModelEmployees", tableModel);

        FrmEmployee frmEmployee = new FrmEmployee(null, true, FormMode.VIEW_MODE);
        Helper.centerDialog(frmEmployee);
        frmEmployee.setVisible(true);
    }//GEN-LAST:event_tblDepartmentEmployeesMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Session.getInstance().addItem("tableModelEmployees", tblDepartmentEmployees.getModel());
        Session.getInstance().addItem("departmentHires", department);
        FrmEmployee frmEmployee = new FrmEmployee(null, true, FormMode.ADD_MODE);
        Helper.centerDialog(frmEmployee);
        frmEmployee.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSetInactive;
    private javax.swing.JComboBox<Status> cmbStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private psproject_v5.ui.form.panel.impl.PnlDepartment pnlDepartment1;
    private javax.swing.JTable tblDepartmentEmployees;
    // End of variables declaration//GEN-END:variables

    private void prepareView() throws SQLException {
        pnlDepartment1.fill(department);
        populateTable();
    }

    private void populateTable() {

        employeesFiltered = filterEmployees();
        TableModelEmployees modelEmployees = new TableModelEmployees(employeesFiltered, false);
        tblDepartmentEmployees.setModel(modelEmployees);
        modelEmployees.setColumnWidths(tblDepartmentEmployees);

    }

    private List<Employee> filterEmployees() {
//        System.out.println("empBeforeFilter: "+employees);
        if (employees == null) {
            return null;
        }
        List<Employee> list = new ArrayList<>();
        Status statusFilter = (Status) cmbStatus.getSelectedItem();
        for (Employee employee : employees) {
            if (employee.getStatus().equals(statusFilter)) {
                list.add(employee);
            }
        }
//        System.out.println("empAfterFilter: "+list);
        return list;
    }

}
