/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package psproject_v5.ui.form;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import psproject_v5.communication.ObjectWrapper;
import psproject_v5.constants.MyConstants;
import psproject_v5.controller.Controller;
import psproject_v5.session.Session;
import psproject_v5.ui.components.table.model.TableModelEmployees;
import psproject_v5.domain.AcademicTitle;
import psproject_v5.domain.Employee;
import psproject_v5.ui.components.table.model.TableModelReportAcademicTitle;
import psproject_v5.ui.form.function.IUpdateView;
import psproject_v5.domain.Department;
import psproject_v5.domain.IEntity;

/**
 *
 * @author aleks
 */
public class FrmReportAcademicTitle extends javax.swing.JDialog implements IUpdateView {

    private List<Employee> employees;
    private Department department;

    /**
     * Creates new form FrmReportAcademicTitle
     */
    public FrmReportAcademicTitle(java.awt.Frame parent, boolean modal, List<Employee> employees) {
        super(parent, modal);
        department = null;
        this.employees = employees;
        initComponents();
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReport = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblReport);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Session.getInstance().addItem(MyConstants.CURRENT_JDIALOG, this);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Session.getInstance().removeItem(MyConstants.CURRENT_JDIALOG);
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReport;
    // End of variables declaration//GEN-END:variables

    public void setDepartment(Department department) {
        this.department = department;
    }

    private void prepareForm() {
        try {

            List<AcademicTitle> academicTitles = Controller.getInstance().getAllAcademicTitles();

            tblReport.setModel(new TableModelReportAcademicTitle(academicTitles, employees));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void newEntity(IEntity o) throws Exception {
        Employee employee = null;

        if (o != null && (o instanceof Employee)) {
            employee = (Employee) o;
        } else {
            return;
        }
        TableModelReportAcademicTitle modelReport = (TableModelReportAcademicTitle) tblReport.getModel();
        if (department == null) {
            modelReport.addEmployee(employee);
        } else {
            if (department.equals(employee.getDepartment())) {
                modelReport.addEmployee(employee);

            } else {

            }
        }
    }

    @Override
    public void changedEntity(IEntity o) throws Exception {
        Employee employee = null;

        if (o != null && (o instanceof Employee)) {
            employee = (Employee) o;
        } else {
            return;
        }
        TableModelReportAcademicTitle modelReport = (TableModelReportAcademicTitle) tblReport.getModel();
        if (department != null) {
            //report za department
            // ako je u modelu vec
            // ako je vec u modelu, sad je ili menjao pa ispada, ili nije menjao pa obicna izmena
            //ako nije u modelu, onda ga dodati samo ako mu je deparment isti kao ovaj iz forme
            if (modelReport.getEmployees().contains(employee)) {
                //vec je tu

                if (modelReport.getEmployeeById(employee.getId()).getDepartment().equals(employee.getDepartment())) {
                    //nije menjao department
                    modelReport.editEmployee(employee);
                } else {
                    //jeste menjao department pa ispada
                    modelReport.removeEmployee(employee);
                }
            } else {
                //ne sadrzi
                if (employee.getDepartment().equals(department)) {
                    modelReport.addEmployee(employee);
                }
            }
        } else {
            //report za ceo faks
            modelReport.editEmployee(employee);
        }
    }
}
