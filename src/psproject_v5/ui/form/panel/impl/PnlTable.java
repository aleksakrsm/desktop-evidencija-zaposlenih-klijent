/*
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package psproject_v5.ui.form.panel.impl;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import psproject_v5.controller.Controller;
import psproject_v5.domain.Employee;
import psproject_v5.domain.EmployeeAcademicTitle;
import psproject_v5.domain.IEntity;
import psproject_v5.exception.RepositoryException;
import psproject_v5.session.Session;
import psproject_v5.ui.components.table.model.TableModelAcademicTitleHistory;

/**
 *
 * @author aleks
 */
public class PnlTable extends javax.swing.JPanel {

    /**
     * Creates new form PnlTable
     */
    public PnlTable() {
        initComponents();
        btnSave.setEnabled(false);
        btnRemove.setEnabled(false);
        Session.getInstance().addItem("btnSavePanelHistory", btnSave);
    }

    public JTable getTable() {
        return tblTable;
    }

    public void setPnlVisible(boolean visible) {
        setVisible(visible);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(412, 153));

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTable.setMinimumSize(new java.awt.Dimension(412, 153));
        tblTable.setPreferredSize(new java.awt.Dimension(412, 153));
        tblTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTable);

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("REMOVE");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove)
                    .addComponent(btnSave))
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        TableModelAcademicTitleHistory tableModelHistory = (TableModelAcademicTitleHistory) tblTable.getModel();
        if (allowNewRow()) {
            tableModelHistory.add();
        }
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        TableModelAcademicTitleHistory tableModelHistory = (TableModelAcademicTitleHistory) tblTable.getModel();
        List<IEntity> unsavedHistoryItems = tableModelHistory.getUnsavedAcademicTitles();
        if (unsavedHistoryItems != null || !unsavedHistoryItems.isEmpty()) {
            // sacuvaj sve unsaved
            try {
                Controller.getInstance().saveOrUpdateList(unsavedHistoryItems);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "GRESKA", JOptionPane.ERROR_MESSAGE);
            }
        }
        btnSave.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int selected = tblTable.getSelectedRow();
        
        if (selected == -1) {
            return;
        }
        TableModelAcademicTitleHistory tableModelHistory = (TableModelAcademicTitleHistory) tblTable.getModel();
        EmployeeAcademicTitle historyItem = tableModelHistory.getAcademicTitles().get(selected);
        historyItem.setEmployee((Employee) Session.getInstance().getValue("employee"));

        tableModelHistory.remove(historyItem);
        try {
            if (historyItem.getAcademicTitle() == null) {
                return;
            }
            Controller.getInstance().delete(historyItem);
        } catch (RepositoryException e) {
            System.out.println(e.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "GRESKA", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void tblTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTableMouseClicked
        btnRemove.setEnabled(true);
    }//GEN-LAST:event_tblTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTable;
    // End of variables declaration//GEN-END:variables

    private boolean allowNewRow() {
        try {
            TableModelAcademicTitleHistory tableModelHistory = (TableModelAcademicTitleHistory) tblTable.getModel();
            EmployeeAcademicTitle historyItem = tableModelHistory.getLatestEntry();
            if (historyItem == null) {
                return true;
            } else {
                if (historyItem.getEndDate() == null) {
                    return false;
                } else {
                    return true;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(PnlTable.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

}
