/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package psproject_v5.ui.form;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import psproject_v5.communication.ObjectWrapper;
import psproject_v5.constants.MyConstants;
import psproject_v5.controller.Controller;
import psproject_v5.help.Helper;
import psproject_v5.domain.Department;
import psproject_v5.domain.Employee;
import psproject_v5.session.Session;
import psproject_v5.ui.components.table.model.TableModelDepartments;
import psproject_v5.ui.form.function.IUpdateView;
import psproject_v5.ui.form.util.FollowingForm;
import psproject_v5.domain.IEntity;

/**
 *
 * @author aleks
 */
public class FrmViewAllDepartments extends javax.swing.JDialog implements IUpdateView{

    /**
     * Creates new form FrmViewAllDepartments
     */
    private List<Department> departments;
    private boolean selectDepartment = false;

    public FrmViewAllDepartments(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        try {
            departments = Controller.getInstance().getAllDepartments();
            initComponents();
            populateTable();
            if (Session.getInstance().getValue("afterSelection") == FollowingForm.REPORT){
                btnAdd.setVisible(false);
            }
            else if (Session.getInstance().getValue("afterSelection") == FollowingForm.VIEW){
                btnAdd.setVisible(true);                
            }

        } catch (Exception ex) {            
            JOptionPane.showMessageDialog(null, ex.getMessage(), "GRESKA", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDepartments = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Departments");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblDepartments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDepartments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDepartmentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDepartments);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDepartmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDepartmentsMouseClicked
        int selected = tblDepartments.getSelectedRow();
        Department department = departments.get(selected);
        JDialog dialog;
        try {
            if (Session.getInstance().getValue("afterSelection") == FollowingForm.REPORT) {
                List<Employee> employees = Controller.getInstance().getAllEmployees(department);
                dialog = new FrmReportAcademicTitle(null, true, employees);
                ((FrmReportAcademicTitle)dialog).setDepartment(department);
                dialog.setTitle(department.getName());
            } else if (Session.getInstance().getValue("afterSelection") == FollowingForm.VIEW){
                dialog = new FrmViewDepartment(null, true, department);
            }
            else{
                return;
            }
            Helper.centerDialog(dialog);
            dialog.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_tblDepartmentsMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Session.getInstance().addItem("tableModelDepartments", tblDepartments.getModel());
        FrmAddDepartment frmAddDepartment = new FrmAddDepartment(null, true);
        Helper.centerDialog(frmAddDepartment);
        frmAddDepartment.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Session.getInstance().addItem(MyConstants.CURRENT_JDIALOG, this);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Session.getInstance().removeItem(MyConstants.CURRENT_JDIALOG);        
    }//GEN-LAST:event_formWindowClosed

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDepartments;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        if (departments == null) {
            return;
        }
        TableModelDepartments tableModelDepartments = new TableModelDepartments(departments);
        tblDepartments.setModel(tableModelDepartments);
        TableColumnModel columnModel = tblDepartments.getColumnModel();
        columnModel.getColumn(0).setMinWidth(25);
        columnModel.getColumn(0).setPreferredWidth(25);
        columnModel.getColumn(0).setMaxWidth(50);

        columnModel.getColumn(1).setMinWidth(100);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(1).setMaxWidth(2000);

        columnModel.getColumn(2).setMinWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(2).setMaxWidth(100);
    }
    
    @Override
    public void newEntity(IEntity o) throws Exception{
        Department department = null;
    
        if(o!=null && (o instanceof Department))
            department = (Department) o;
        else
            return;
        
        TableModelDepartments modelDepartments = (TableModelDepartments) tblDepartments.getModel();
        modelDepartments.add(department);
    }

}
